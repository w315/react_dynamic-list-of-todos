{"version":3,"sources":["api.ts","components/Context/Context.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/AppContent/AppContent.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","TodosContext","createContext","undefined","TodosProvider","children","useState","loading","setLoading","loadingModal","setLoadingModal","modal","setModal","todos","setTodos","todosWithUser","setTodosWithUser","searchText","setSearchText","appliedSearchText","setAppliedSearchText","filter","setFilter","getPreparedTodos","currTodos","query","preparedTodos","normalizeQuery","toLowerCase","trim","todo","title","includes","useEffect","todosFromServer","fetchUsers","a","userPromises","map","all","users","newTodosWithUsers","index","user","length","contextValues","Provider","value","useTodos","context","useContext","Error","Loader","className","TodoModal","id","completed","name","email","type","onClick","href","TodoList","selectedTodo","setSelectedTodo","fetchUserAndOpenModal","filteredTodos","openModal","TodoFilter","appliedQuery","useCallback","callback","timerId","args","window","clearTimeout","debounce","defaultValue","onChange","e","target","placeholder","style","pointerEvents","AppContent","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.edcc7083.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, {\n  ReactNode, createContext, useContext, useState, useEffect,\n} from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getTodos, getUser } from '../../api';\n\ninterface TodosContextType {\n  loading: boolean;\n  loadingModal: boolean;\n  modal: boolean;\n  todosWithUser: TodoWithUser[];\n  searchText: string;\n  appliedSearchText: string;\n  filter: string;\n  setLoading: React.Dispatch<React.SetStateAction<boolean>>;\n  setLoadingModal: React.Dispatch<React.SetStateAction<boolean>>;\n  setModal: React.Dispatch<React.SetStateAction<boolean>>;\n  setSearchText: React.Dispatch<React.SetStateAction<string>>;\n  setAppliedSearchText: React.Dispatch<React.SetStateAction<string>>;\n  setFilter: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport interface TodoWithUser {\n  user: User;\n  id: number;\n  title: string;\n  completed: boolean;\n  userId: number;\n}\n\nconst TodosContext = createContext<TodosContextType | undefined>(undefined);\n\nexport const TodosProvider: React\n  .FC<{ children: ReactNode }> = ({ children }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const [loadingModal, setLoadingModal] = useState<boolean>(true);\n  const [modal, setModal] = useState<boolean>(false);\n\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [todosWithUser, setTodosWithUser] = useState<TodoWithUser[]>([]);\n\n  const [searchText, setSearchText] = useState<string>('');\n  const [appliedSearchText, setAppliedSearchText] = useState<string>('');\n\n  const [filter, setFilter] = useState<string>('all');\n\n  function getPreparedTodos(currTodos: TodoWithUser[], query: string) {\n    let preparedTodos = [...currTodos];\n    const normalizeQuery = query.toLowerCase().trim();\n\n    if (query) {\n      preparedTodos = preparedTodos\n        .filter(todo => todo.title.toLowerCase().includes(normalizeQuery)\n          || todo.title.toLowerCase().includes(normalizeQuery));\n    }\n\n    return preparedTodos;\n  }\n\n  useEffect(() => {\n    getTodos().then((todosFromServer: Todo[]) => {\n      setTodos(todosFromServer);\n    });\n  }, []);\n\n  useEffect(() => {\n    setLoading(true);\n    const fetchUsers = async () => {\n      const userPromises = todos.map((todo) => getUser(todo.userId));\n      const users = await Promise.all(userPromises);\n\n      const newTodosWithUsers = todos.map((todo, index) => ({\n        ...todo,\n        user: users[index],\n      }));\n\n      setTodosWithUser(getPreparedTodos(newTodosWithUsers, appliedSearchText));\n\n      setLoading(false);\n    };\n\n    if (todos.length > 0) {\n      fetchUsers();\n    }\n  }, [todos, appliedSearchText]);\n\n  const contextValues = {\n    loading,\n    setLoading,\n    modal,\n    setModal,\n    todosWithUser,\n    setSearchText,\n    searchText,\n    filter,\n    setFilter,\n    appliedSearchText,\n    setAppliedSearchText,\n    loadingModal,\n    setLoadingModal,\n  };\n\n  return (\n    <TodosContext.Provider value={contextValues}>\n      {children}\n    </TodosContext.Provider>\n  );\n};\n\nexport const useTodos = (): TodosContextType => {\n  const context = useContext(TodosContext);\n\n  if (!context) {\n    throw new Error('useTodos must be used within a TodosProvider');\n  }\n\n  return context;\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => {\n  return (\n    <div className=\"Loader\" data-cy=\"loader\">\n      <div className=\"Loader__content\" />\n    </div>\n  );\n};\n","import React from 'react';\nimport { Loader } from '../Loader';\nimport { TodoWithUser, useTodos } from '../Context';\n\ninterface TodoModalProps {\n  todo: TodoWithUser;\n}\n\nexport const TodoModal: React.FC<TodoModalProps> = ({ todo }) => {\n  const { loadingModal, setModal, setLoadingModal } = useTodos();\n\n  const {\n    id, user, title, completed,\n  } = todo;\n  const { name, email } = user;\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loadingModal ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"delete\"\n              onClick={() => {\n                setModal(false);\n                setLoadingModal(true);\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {\n                completed\n                  ? (<strong className=\"has-text-success\">Done</strong>)\n                  : (<strong className=\"has-text-danger\">Planned</strong>)\n              }\n\n              {' by '}\n\n              <a href={`mailto:${email}`}>\n                {name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { TodoWithUser, useTodos } from '../Context';\nimport { TodoModal } from '../TodoModal';\nimport { getUser } from '../../api';\n\nconst ACTIVE_TODOS = 'active';\nconst COMPLETED_TODOS = 'completed';\n\nexport const TodoList: React.FC = () => {\n  const {\n    modal, setModal, todosWithUser, filter, setLoadingModal,\n  } = useTodos();\n  const [selectedTodo, setSelectedTodo] = useState<TodoWithUser | null>(null);\n\n  useEffect(() => {\n    const fetchUserAndOpenModal = async (todo: TodoWithUser) => {\n      setLoadingModal(true);\n      await getUser(todo.userId);\n      setSelectedTodo(todo);\n      setModal(true);\n      setLoadingModal(false);\n    };\n\n    if (modal && selectedTodo) {\n      fetchUserAndOpenModal(selectedTodo);\n    }\n  }, [modal, selectedTodo]);\n\n  const openModal = (todo: TodoWithUser) => {\n    setSelectedTodo(todo);\n    setModal(true);\n  };\n\n  const filteredTodos = () => {\n    switch (filter) {\n      case ACTIVE_TODOS:\n        return todosWithUser.filter(todo => !todo.completed);\n\n      case COMPLETED_TODOS:\n        return todosWithUser.filter(todo => todo.completed);\n\n      default:\n        return todosWithUser;\n    }\n  };\n\n  return (\n    <>\n      <table className=\"table is-narrow is-fullwidth\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>\n              <span className=\"icon\">\n                <i className=\"fas fa-check\" />\n              </span>\n            </th>\n            <th>Title</th>\n            <th> </th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {filteredTodos().map((todo) => {\n            const { id, completed, title } = todo;\n\n            return (\n              <tr data-cy=\"todo\" className=\"\" key={id}>\n                <td className=\"is-vcentered\">{id}</td>\n                <td className=\"is-vcentered\">\n                  {todo.completed && (\n                    <span className=\"icon\">\n                      <i className=\"fas fa-check\" />\n                    </span>\n                  )}\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={completed\n                    ? 'has-text-success'\n                    : 'has-text-danger'}\n                  >\n                    {title}\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => openModal(todo)}\n                  >\n                    <span className=\"icon\" data-cy=\"iconCompleted\">\n                      <i className={modal\n                        ? 'far fa-eye-slash'\n                        : 'far fa-eye'}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n\n      {modal && selectedTodo && <TodoModal todo={selectedTodo} />}\n    </>\n  );\n};\n","import { useCallback } from 'react';\nimport { useTodos } from '../Context';\n\nfunction debounce(\n  callback: React.Dispatch<React.SetStateAction<string>>,\n  delay: number,\n) {\n  let timerId = 0;\n\n  return (...args: any[]) => {\n    window.clearTimeout(timerId);\n\n    timerId = window.setTimeout(() => {\n      callback(args[0]);\n    }, delay);\n  };\n}\n\nexport const TodoFilter = () => {\n  const {\n    setSearchText,\n    searchText,\n    setFilter,\n    filter,\n    setAppliedSearchText,\n    appliedSearchText,\n  } = useTodos();\n\n  const appliedQuery = useCallback(debounce(setAppliedSearchText, 500), []);\n\n  const handleSearchTextChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearchText(e.target.value);\n    appliedQuery(e.target.value);\n  };\n\n  const handleClearSearch = () => {\n    setSearchText('');\n    setAppliedSearchText('');\n  };\n\n  const handleFilterChange = (type: string) => {\n    setFilter(type);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            defaultValue={filter}\n            onChange={(e) => handleFilterChange(e.target.value)}\n          >\n            <option\n              value=\"all\"\n            >\n              All\n            </option>\n            <option\n              value=\"active\"\n            >\n              Active\n            </option>\n            <option\n              value=\"completed\"\n            >\n              Completed\n            </option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          onChange={handleSearchTextChange}\n          value={searchText}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {appliedSearchText.length !== 0 && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={handleClearSearch}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { TodoList } from '../TodoList';\nimport { TodoFilter } from '../TodoFilter';\nimport { Loader } from '../Loader';\nimport { useTodos } from '../Context';\n\nexport const AppContent: React.FC = () => {\n  const { loading } = useTodos();\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n              <TodoList />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodosProvider } from './components/Context';\nimport { AppContent } from './components/AppContent';\n\nexport const App: React.FC = () => {\n  return (\n    <TodosProvider>\n      <AppContent />\n    </TodosProvider>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}